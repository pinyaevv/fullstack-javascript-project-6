extends ../layouts/application.pug

block header
  | #{t('views.tasks.new.title')}

block content
  +formFor(task, { action: route('tasks.create'), method: 'POST' })
    +input(task, 'name', errors)(type="text" label=t('views.tasks.new.form.name'))
    +input(task, 'description', errors)(type="text" label=t('views.tasks.new.form.description'))

    - const statusErrors = errors.statusId || []
    - const statusInvalid = !_.isEmpty(statusErrors)
    .form-group.mb-3
      label(for="data_statusId")= t('views.tasks.new.form.status')
      select.form-select(class={ 'is-invalid': statusInvalid }, id="data_statusId", name="data[statusId]")
        option(value="") #{t('views.tasks.new.form.selectStatus')}
        each status in statuses
          option(value=status.id selected=(String(task.statusId) === String(status.id)))= status.name
      if statusInvalid
        .invalid-feedback= statusErrors.map(({ message }) => message).join('. ')

    label(for="executorId")= t('views.tasks.new.form.executor')
    select(id="data_executorId" name="data[executorId]").form-select
      option(value="") #{t('views.tasks.new.form.selectExecutor')}
      each user in users
        option(value=user.id selected=(String(task.executorId) === String(user.id)))= user.fullName
    
    .form-group
      label(for="data_labels")= t('views.tasks.index.labels')
      select#data_labels(name="data[labelIds]" multiple).form-select
        each label in labels
          option(value=label.id selected=labelIds.includes(label.id))= label.name

    +submit()(value=t('views.tasks.new.submit'))
